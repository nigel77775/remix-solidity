async function readStorageSlot() {
    const Web3 = require("web3");
    const web3 = new Web3(window.ethereum);

    // üëâ –£–∫–∞–∂–∏ –Ω—É–∂–Ω—ã–π –∞–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –∏ –Ω–æ–º–µ—Ä —Å–ª–æ—Ç–∞
    const contractAddress = "0x8BB6b0Fa30cC207Be5644271233ab342aDF6aEFF"; // <-- –í–°–¢–ê–í–¨ –°–í–û–ô
    const slot = 1; // <-- –Ω–æ–º–µ—Ä storage-—Å–ª–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å

    // –ü–æ–ø—Ä–æ—Å–∏–º –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç–∞–º –≤ Metamask
    await window.ethereum.request({ method: "eth_requestAccounts" });

    // –ß–∏—Ç–∞–µ–º storage
    const raw = await web3.eth.getStorageAt(contractAddress, slot);
    console.log(`üß† Storage slot ${slot}:`, raw);

    // –ü–æ–ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –∞–¥—Ä–µ—Å, –µ—Å–ª–∏ —ç—Ç–æ uint256/address packed
    const decodedAddress = "0x" + raw.slice(26);
    console.log("üîç –ö–∞–∫ –∞–¥—Ä–µ—Å (–µ—Å–ª–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç):", decodedAddress);
}

readStorageSlot();
