{
	"id": "e1c2098dd255e1bfb094de4cca873596",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"fort.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IDetectionBot {\r\n    function handleTransaction(address user, bytes calldata msgData) external;\r\n}\r\n\r\ninterface IForta {\r\n    function setDetectionBot(address detectionBotAddress) external;\r\n    function notify(address user, bytes calldata msgData) external;\r\n    function raiseAlert(address user) external;\r\n}\r\n\r\ncontract AlertBot is IDetectionBot {\r\n    address private cryptoVault;\r\n    \r\n    constructor(address _cryptoVault) public {\r\n        cryptoVault = _cryptoVault;\r\n    }\r\n\r\n    function handleTransaction(address user, bytes calldata msgData) external override {\r\n\r\n        address origSender;\r\n        assembly {\r\n            origSender := calldataload(0xa8)\r\n        }\r\n\r\n        if(origSender == cryptoVault) {\r\n            IForta(msg.sender).raiseAlert(user);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"fort.sol": {
				"AlertBot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cryptoVault",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "msgData",
									"type": "bytes"
								}
							],
							"name": "handleTransaction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"fort.sol\":384:866  contract AlertBot is IDetectionBot {\r... */\n  mstore(0x40, 0x80)\n    /* \"fort.sol\":466:552  constructor(address _cryptoVault) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"fort.sol\":532:544  _cryptoVault */\n  dup1\n    /* \"fort.sol\":518:529  cryptoVault */\n  0x00\n  dup1\n    /* \"fort.sol\":518:544  cryptoVault = _cryptoVault */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"fort.sol\":466:552  constructor(address _cryptoVault) public {\r... */\n  pop\n    /* \"fort.sol\":384:866  contract AlertBot is IDetectionBot {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_14\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:542   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":512:536   */\n  tag_17\n    /* \"#utility.yul\":530:535   */\n  dup3\n    /* \"#utility.yul\":512:536   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":501:536   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:542   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":548:674   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":625:667   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":618:623   */\n  dup3\n    /* \"#utility.yul\":614:668   */\n  and\n    /* \"#utility.yul\":603:668   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:674   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":680:802   */\ntag_11:\n    /* \"#utility.yul\":753:777   */\n  tag_21\n    /* \"#utility.yul\":771:776   */\n  dup2\n    /* \"#utility.yul\":753:777   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":746:751   */\n  dup2\n    /* \"#utility.yul\":743:778   */\n  eq\n    /* \"#utility.yul\":733:735   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":789:790   */\n  dup1\n    /* \"#utility.yul\":782:794   */\n  revert\n    /* \"#utility.yul\":733:735   */\ntag_22:\n    /* \"#utility.yul\":723:802   */\n  pop\n  jump\t// out\n    /* \"fort.sol\":384:866  contract AlertBot is IDetectionBot {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"fort.sol\":384:866  contract AlertBot is IDetectionBot {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x220ab6aa\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"fort.sol\":560:863  function handleTransaction(address user, bytes calldata msgData) external override {\r... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"fort.sol\":656:674  address origSender */\n      0x00\n        /* \"fort.sol\":736:740  0xa8 */\n      0xa8\n        /* \"fort.sol\":723:741  calldataload(0xa8) */\n      calldataload\n        /* \"fort.sol\":709:741  origSender := calldataload(0xa8) */\n      swap1\n      pop\n        /* \"fort.sol\":781:792  cryptoVault */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fort.sol\":767:792  origSender == cryptoVault */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"fort.sol\":767:777  origSender */\n      dup2\n        /* \"fort.sol\":767:792  origSender == cryptoVault */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"fort.sol\":764:856  if(origSender == cryptoVault) {\r... */\n      iszero\n      tag_9\n      jumpi\n        /* \"fort.sol\":816:826  msg.sender */\n      caller\n        /* \"fort.sol\":809:838  IForta(msg.sender).raiseAlert */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x087a43c1\n        /* \"fort.sol\":839:843  user */\n      dup6\n        /* \"fort.sol\":809:844  IForta(msg.sender).raiseAlert(user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_14:\n      pop\n      pop\n      pop\n      pop\n        /* \"fort.sol\":764:856  if(origSender == cryptoVault) {\r... */\n    tag_9:\n        /* \"fort.sol\":560:863  function handleTransaction(address user, bytes calldata msgData) external override {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_16:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_18\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":165:516   */\n    tag_20:\n      0x00\n      dup1\n        /* \"#utility.yul\":282:285   */\n      dup4\n        /* \"#utility.yul\":275:279   */\n      0x1f\n        /* \"#utility.yul\":267:273   */\n      dup5\n        /* \"#utility.yul\":263:280   */\n      add\n        /* \"#utility.yul\":259:286   */\n      slt\n        /* \"#utility.yul\":249:251   */\n      tag_22\n      jumpi\n        /* \"#utility.yul\":300:301   */\n      0x00\n        /* \"#utility.yul\":297:298   */\n      dup1\n        /* \"#utility.yul\":290:302   */\n      revert\n        /* \"#utility.yul\":249:251   */\n    tag_22:\n        /* \"#utility.yul\":336:342   */\n      dup3\n        /* \"#utility.yul\":323:343   */\n      calldataload\n        /* \"#utility.yul\":313:343   */\n      swap1\n      pop\n        /* \"#utility.yul\":366:384   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":358:364   */\n      dup2\n        /* \"#utility.yul\":355:385   */\n      gt\n        /* \"#utility.yul\":352:354   */\n      iszero\n      tag_23\n      jumpi\n        /* \"#utility.yul\":398:399   */\n      0x00\n        /* \"#utility.yul\":395:396   */\n      dup1\n        /* \"#utility.yul\":388:400   */\n      revert\n        /* \"#utility.yul\":352:354   */\n    tag_23:\n        /* \"#utility.yul\":435:439   */\n      0x20\n        /* \"#utility.yul\":427:433   */\n      dup4\n        /* \"#utility.yul\":423:440   */\n      add\n        /* \"#utility.yul\":411:440   */\n      swap2\n      pop\n        /* \"#utility.yul\":489:492   */\n      dup4\n        /* \"#utility.yul\":481:485   */\n      0x01\n        /* \"#utility.yul\":473:479   */\n      dup3\n        /* \"#utility.yul\":469:486   */\n      mul\n        /* \"#utility.yul\":459:467   */\n      dup4\n        /* \"#utility.yul\":455:487   */\n      add\n        /* \"#utility.yul\":452:493   */\n      gt\n        /* \"#utility.yul\":449:451   */\n      iszero\n      tag_24\n      jumpi\n        /* \"#utility.yul\":506:507   */\n      0x00\n        /* \"#utility.yul\":503:504   */\n      dup1\n        /* \"#utility.yul\":496:508   */\n      revert\n        /* \"#utility.yul\":449:451   */\n    tag_24:\n        /* \"#utility.yul\":239:516   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":522:1060   */\n    tag_6:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":666:668   */\n      0x40\n        /* \"#utility.yul\":654:663   */\n      dup5\n        /* \"#utility.yul\":645:652   */\n      dup7\n        /* \"#utility.yul\":641:664   */\n      sub\n        /* \"#utility.yul\":637:669   */\n      slt\n        /* \"#utility.yul\":634:636   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":682:683   */\n      0x00\n        /* \"#utility.yul\":679:680   */\n      dup1\n        /* \"#utility.yul\":672:684   */\n      revert\n        /* \"#utility.yul\":634:636   */\n    tag_26:\n        /* \"#utility.yul\":725:726   */\n      0x00\n        /* \"#utility.yul\":750:803   */\n      tag_27\n        /* \"#utility.yul\":795:802   */\n      dup7\n        /* \"#utility.yul\":786:792   */\n      dup3\n        /* \"#utility.yul\":775:784   */\n      dup8\n        /* \"#utility.yul\":771:793   */\n      add\n        /* \"#utility.yul\":750:803   */\n      tag_16\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":740:803   */\n      swap4\n      pop\n        /* \"#utility.yul\":696:813   */\n      pop\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":869:878   */\n      dup5\n        /* \"#utility.yul\":865:883   */\n      add\n        /* \"#utility.yul\":852:884   */\n      calldataload\n        /* \"#utility.yul\":911:929   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":900:930   */\n      gt\n        /* \"#utility.yul\":897:899   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":943:944   */\n      0x00\n        /* \"#utility.yul\":940:941   */\n      dup1\n        /* \"#utility.yul\":933:945   */\n      revert\n        /* \"#utility.yul\":897:899   */\n    tag_28:\n        /* \"#utility.yul\":979:1043   */\n      tag_29\n        /* \"#utility.yul\":1035:1042   */\n      dup7\n        /* \"#utility.yul\":1026:1032   */\n      dup3\n        /* \"#utility.yul\":1015:1024   */\n      dup8\n        /* \"#utility.yul\":1011:1033   */\n      add\n        /* \"#utility.yul\":979:1043   */\n      tag_20\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":961:1043   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":823:1053   */\n      pop\n        /* \"#utility.yul\":624:1060   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1066:1184   */\n    tag_30:\n        /* \"#utility.yul\":1153:1177   */\n      tag_32\n        /* \"#utility.yul\":1171:1176   */\n      dup2\n        /* \"#utility.yul\":1153:1177   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":1148:1151   */\n      dup3\n        /* \"#utility.yul\":1141:1178   */\n      mstore\n        /* \"#utility.yul\":1131:1184   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1190:1412   */\n    tag_11:\n      0x00\n        /* \"#utility.yul\":1321:1323   */\n      0x20\n        /* \"#utility.yul\":1310:1319   */\n      dup3\n        /* \"#utility.yul\":1306:1324   */\n      add\n        /* \"#utility.yul\":1298:1324   */\n      swap1\n      pop\n        /* \"#utility.yul\":1334:1405   */\n      tag_35\n        /* \"#utility.yul\":1402:1403   */\n      0x00\n        /* \"#utility.yul\":1391:1400   */\n      dup4\n        /* \"#utility.yul\":1387:1404   */\n      add\n        /* \"#utility.yul\":1378:1384   */\n      dup5\n        /* \"#utility.yul\":1334:1405   */\n      tag_30\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":1288:1412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1418:1514   */\n    tag_33:\n      0x00\n        /* \"#utility.yul\":1484:1508   */\n      tag_37\n        /* \"#utility.yul\":1502:1507   */\n      dup3\n        /* \"#utility.yul\":1484:1508   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1473:1508   */\n      swap1\n      pop\n        /* \"#utility.yul\":1463:1514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1520:1646   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":1597:1639   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1590:1595   */\n      dup3\n        /* \"#utility.yul\":1586:1640   */\n      and\n        /* \"#utility.yul\":1575:1640   */\n      swap1\n      pop\n        /* \"#utility.yul\":1565:1646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1652:1774   */\n    tag_19:\n        /* \"#utility.yul\":1725:1749   */\n      tag_41\n        /* \"#utility.yul\":1743:1748   */\n      dup2\n        /* \"#utility.yul\":1725:1749   */\n      tag_33\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1718:1723   */\n      dup2\n        /* \"#utility.yul\":1715:1750   */\n      eq\n        /* \"#utility.yul\":1705:1707   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":1764:1765   */\n      0x00\n        /* \"#utility.yul\":1761:1762   */\n      dup1\n        /* \"#utility.yul\":1754:1766   */\n      revert\n        /* \"#utility.yul\":1705:1707   */\n    tag_42:\n        /* \"#utility.yul\":1695:1774   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220554ff4d7d45cec0a2c81a0b67d18af6bf94fc29e840354bb43f442ceb567ec4e64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:805:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:284:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "530:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "512:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:1",
														"type": ""
													}
												],
												"src": "446:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "603:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "618:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "614:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "603:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "575:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "585:7:1",
														"type": ""
													}
												],
												"src": "548:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "780:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "746:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "753:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "753:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "743:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "743:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:43:1"
															},
															"nodeType": "YulIf",
															"src": "733:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "716:5:1",
														"type": ""
													}
												],
												"src": "680:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103873803806103878339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6102798061010e6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063220ab6aa14610030575b600080fd5b61004a60048036038101906100459190610178565b61004c565b005b600060a835905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610113573373ffffffffffffffffffffffffffffffffffffffff1663087a43c1856040518263ffffffff1660e01b81526004016100e091906101df565b600060405180830381600087803b1580156100fa57600080fd5b505af115801561010e573d6000803e3d6000fd5b505050505b50505050565b6000813590506101288161022c565b92915050565b60008083601f84011261014057600080fd5b8235905067ffffffffffffffff81111561015957600080fd5b60208301915083600182028301111561017157600080fd5b9250929050565b60008060006040848603121561018d57600080fd5b600061019b86828701610119565b935050602084013567ffffffffffffffff8111156101b857600080fd5b6101c48682870161012e565b92509250509250925092565b6101d9816101fa565b82525050565b60006020820190506101f460008301846101d0565b92915050565b60006102058261020c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610235816101fa565b811461024057600080fd5b5056fea2646970667358221220554ff4d7d45cec0a2c81a0b67d18af6bf94fc29e840354bb43f442ceb567ec4e64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x387 CODESIZE SUB DUP1 PUSH2 0x387 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1 DUP3 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1 DUP2 PUSH2 0xB6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x279 DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x220AB6AA EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x178 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0xA8 CALLDATALOAD SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x113 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x87A43C1 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x128 DUP2 PUSH2 0x22C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19B DUP7 DUP3 DUP8 ADD PUSH2 0x119 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C4 DUP7 DUP3 DUP8 ADD PUSH2 0x12E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1D9 DUP2 PUSH2 0x1FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 DUP3 PUSH2 0x20C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x235 DUP2 PUSH2 0x1FA JUMP JUMPDEST DUP2 EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x4F DELEGATECALL 0xD7 0xD4 0x5C 0xEC EXP 0x2C DUP2 LOG0 0xB6 PUSH30 0x18AF6BF94FC29E840354BB43F442CEB567EC4E64736F6C63430008000033 ",
							"sourceMap": "384:482:0:-:0;;;466:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;532:12;518:11;;:26;;;;;;;;;;;;;;;;;;466:86;384:482;;7:143:1;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;384:482:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1777:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "239:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "288:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "297:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "290:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "290:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "290:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "267:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "275:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "263:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "263:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "282:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "259:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "259:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "252:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:35:1"
															},
															"nodeType": "YulIf",
															"src": "249:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "313:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "336:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "323:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "323:20:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "386:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "395:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "398:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "388:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "388:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "358:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "366:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "355:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:30:1"
															},
															"nodeType": "YulIf",
															"src": "352:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "411:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "427:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "435:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "423:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "423:17:1"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "411:8:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "494:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "503:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "506:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "496:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "496:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "496:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "459:8:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "481:4:1",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "469:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "469:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "455:32:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "489:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "452:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:41:1"
															},
															"nodeType": "YulIf",
															"src": "449:2:1"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "206:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "214:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "222:8:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "232:6:1",
														"type": ""
													}
												],
												"src": "165:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "624:436:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "670:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "679:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "682:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "672:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "672:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "645:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "654:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "641:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "641:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "666:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "637:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "637:32:1"
															},
															"nodeType": "YulIf",
															"src": "634:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "696:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "711:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "725:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "715:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "740:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "775:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "786:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "771:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "771:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "795:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "750:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "750:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "740:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "823:230:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "838:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "869:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "880:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "865:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "865:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "852:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "852:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "842:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "931:16:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "940:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "943:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "933:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "933:12:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "933:12:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "911:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "900:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "897:2:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "961:82:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1015:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1026:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1011:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1011:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1035:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "979:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "979:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "961:6:1"
																		},
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "969:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "578:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "589:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "601:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "609:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "617:6:1",
														"type": ""
													}
												],
												"src": "522:538:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1131:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1148:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1171:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1153:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1153:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1141:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1141:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1119:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1126:3:1",
														"type": ""
													}
												],
												"src": "1066:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1288:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1298:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1310:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1321:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1306:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1298:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1378:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1391:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1402:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1387:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1387:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1334:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1260:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1272:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1283:4:1",
														"type": ""
													}
												],
												"src": "1190:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1463:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1473:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1502:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1484:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1473:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1445:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1455:7:1",
														"type": ""
													}
												],
												"src": "1418:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1565:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1575:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1590:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1597:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1586:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1586:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1575:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1547:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1557:7:1",
														"type": ""
													}
												],
												"src": "1520:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1752:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1764:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1754:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1754:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1718:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1743:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1725:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1725:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1715:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1715:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:43:1"
															},
															"nodeType": "YulIf",
															"src": "1705:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1688:5:1",
														"type": ""
													}
												],
												"src": "1652:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063220ab6aa14610030575b600080fd5b61004a60048036038101906100459190610178565b61004c565b005b600060a835905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610113573373ffffffffffffffffffffffffffffffffffffffff1663087a43c1856040518263ffffffff1660e01b81526004016100e091906101df565b600060405180830381600087803b1580156100fa57600080fd5b505af115801561010e573d6000803e3d6000fd5b505050505b50505050565b6000813590506101288161022c565b92915050565b60008083601f84011261014057600080fd5b8235905067ffffffffffffffff81111561015957600080fd5b60208301915083600182028301111561017157600080fd5b9250929050565b60008060006040848603121561018d57600080fd5b600061019b86828701610119565b935050602084013567ffffffffffffffff8111156101b857600080fd5b6101c48682870161012e565b92509250509250925092565b6101d9816101fa565b82525050565b60006020820190506101f460008301846101d0565b92915050565b60006102058261020c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610235816101fa565b811461024057600080fd5b5056fea2646970667358221220554ff4d7d45cec0a2c81a0b67d18af6bf94fc29e840354bb43f442ceb567ec4e64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x220AB6AA EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x178 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0xA8 CALLDATALOAD SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x113 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x87A43C1 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x128 DUP2 PUSH2 0x22C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19B DUP7 DUP3 DUP8 ADD PUSH2 0x119 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C4 DUP7 DUP3 DUP8 ADD PUSH2 0x12E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1D9 DUP2 PUSH2 0x1FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 DUP3 PUSH2 0x20C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x235 DUP2 PUSH2 0x1FA JUMP JUMPDEST DUP2 EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x4F DELEGATECALL 0xD7 0xD4 0x5C 0xEC EXP 0x2C DUP2 LOG0 0xB6 PUSH30 0x18AF6BF94FC29E840354BB43F442CEB567EC4E64736F6C63430008000033 ",
							"sourceMap": "384:482:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;656:18;736:4;723:18;709:32;;781:11;;;;;;;;;;767:25;;:10;:25;;;764:92;;;816:10;809:29;;;839:4;809:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:92;560:303;;;;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;165:351::-;;;282:3;275:4;267:6;263:17;259:27;249:2;;300:1;297;290:12;249:2;336:6;323:20;313:30;;366:18;358:6;355:30;352:2;;;398:1;395;388:12;352:2;435:4;427:6;423:17;411:29;;489:3;481:4;473:6;469:17;459:8;455:32;452:41;449:2;;;506:1;503;496:12;449:2;239:277;;;;;:::o;522:538::-;;;;666:2;654:9;645:7;641:23;637:32;634:2;;;682:1;679;672:12;634:2;725:1;750:53;795:7;786:6;775:9;771:22;750:53;:::i;:::-;740:63;;696:117;880:2;869:9;865:18;852:32;911:18;903:6;900:30;897:2;;;943:1;940;933:12;897:2;979:64;1035:7;1026:6;1015:9;1011:22;979:64;:::i;:::-;961:82;;;;823:230;624:436;;;;;:::o;1066:118::-;1153:24;1171:5;1153:24;:::i;:::-;1148:3;1141:37;1131:53;;:::o;1190:222::-;;1321:2;1310:9;1306:18;1298:26;;1334:71;1402:1;1391:9;1387:17;1378:6;1334:71;:::i;:::-;1288:124;;;;:::o;1418:96::-;;1484:24;1502:5;1484:24;:::i;:::-;1473:35;;1463:51;;;:::o;1520:126::-;;1597:42;1590:5;1586:54;1575:65;;1565:81;;;:::o;1652:122::-;1725:24;1743:5;1725:24;:::i;:::-;1718:5;1715:35;1705:2;;1764:1;1761;1754:12;1705:2;1695:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "126600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"handleTransaction(address,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 384,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 384,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 384,
									"end": 866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 466,
									"end": 552,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 466,
									"end": 552,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 466,
									"end": 552,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 466,
									"end": 552,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 466,
									"end": 552,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 466,
									"end": 552,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 466,
									"end": 552,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 466,
									"end": 552,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 466,
									"end": 552,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 532,
									"end": 544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 518,
									"end": 529,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 518,
									"end": 529,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 518,
									"end": 544,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 518,
									"end": 544,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 518,
									"end": 544,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 518,
									"end": 544,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 466,
									"end": 552,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 384,
									"end": 866,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 384,
									"end": 866,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 156,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 446,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 530,
									"end": 535,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 501,
									"end": 536,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 501,
									"end": 536,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 548,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 667,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 618,
									"end": 623,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 614,
									"end": 668,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 603,
									"end": 668,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 603,
									"end": 668,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 771,
									"end": 776,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 746,
									"end": 751,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 743,
									"end": 778,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 733,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 782,
									"end": 794,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 733,
									"end": 735,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 723,
									"end": 802,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 723,
									"end": 802,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 384,
									"end": 866,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 384,
									"end": 866,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 384,
									"end": 866,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 384,
									"end": 866,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 384,
									"end": 866,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 384,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 866,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 384,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 866,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220554ff4d7d45cec0a2c81a0b67d18af6bf94fc29e840354bb43f442ceb567ec4e64736f6c63430008000033",
									".code": [
										{
											"begin": 384,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 384,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 384,
											"end": 866,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 866,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 384,
											"end": 866,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "220AB6AA"
										},
										{
											"begin": 384,
											"end": 866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 384,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 560,
											"end": 863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 560,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 560,
											"end": 863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 560,
											"end": 863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 560,
											"end": 863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 863,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 560,
											"end": 863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 560,
											"end": 863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 863,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 560,
											"end": 863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 560,
											"end": 863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 656,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 740,
											"name": "PUSH",
											"source": 0,
											"value": "A8"
										},
										{
											"begin": 723,
											"end": 741,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 709,
											"end": 741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 781,
											"end": 792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 781,
											"end": 792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 792,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 781,
											"end": 792,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 781,
											"end": 792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 792,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 781,
											"end": 792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 767,
											"end": 792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 767,
											"end": 792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 767,
											"end": 777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 767,
											"end": 792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 767,
											"end": 792,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 764,
											"end": 856,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 764,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 764,
											"end": 856,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 816,
											"end": 826,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 809,
											"end": 838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 809,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "87A43C1"
										},
										{
											"begin": 839,
											"end": 843,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 809,
											"end": 844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 809,
											"end": 844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 764,
											"end": 856,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 764,
											"end": 856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 863,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 165,
											"end": 516,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 165,
											"end": 516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 282,
											"end": 285,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 275,
											"end": 279,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 263,
											"end": 280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 286,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 249,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 249,
											"end": 251,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 300,
											"end": 301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 290,
											"end": 302,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 249,
											"end": 251,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 249,
											"end": 251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 336,
											"end": 342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 343,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 313,
											"end": 343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 313,
											"end": 343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 366,
											"end": 384,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 358,
											"end": 364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 355,
											"end": 385,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 352,
											"end": 354,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 352,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 352,
											"end": 354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 398,
											"end": 399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 396,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 400,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 352,
											"end": 354,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 352,
											"end": 354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 435,
											"end": 439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 433,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 423,
											"end": 440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 411,
											"end": 440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 492,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 481,
											"end": 485,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 473,
											"end": 479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 469,
											"end": 486,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 459,
											"end": 467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 455,
											"end": 487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 452,
											"end": 493,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 449,
											"end": 451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 449,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 449,
											"end": 451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 506,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 496,
											"end": 508,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 449,
											"end": 451,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 449,
											"end": 451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 239,
											"end": 516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 239,
											"end": 516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 239,
											"end": 516,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 522,
											"end": 1060,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 522,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 522,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 1060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 522,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 668,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 663,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 645,
											"end": 652,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 641,
											"end": 664,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 637,
											"end": 669,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 634,
											"end": 636,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 634,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 634,
											"end": 636,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 682,
											"end": 683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 672,
											"end": 684,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 634,
											"end": 636,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 634,
											"end": 636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 795,
											"end": 802,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 786,
											"end": 792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 775,
											"end": 784,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 771,
											"end": 793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 750,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 750,
											"end": 803,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 750,
											"end": 803,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 750,
											"end": 803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 740,
											"end": 803,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 740,
											"end": 803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 865,
											"end": 883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 852,
											"end": 884,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 911,
											"end": 929,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 900,
											"end": 930,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 897,
											"end": 899,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 897,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 897,
											"end": 899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 943,
											"end": 944,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 933,
											"end": 945,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 897,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 897,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1035,
											"end": 1042,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 979,
											"end": 1043,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 979,
											"end": 1043,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 979,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 823,
											"end": 1053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 624,
											"end": 1060,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 624,
											"end": 1060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 624,
											"end": 1060,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 624,
											"end": 1060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 624,
											"end": 1060,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 624,
											"end": 1060,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1066,
											"end": 1184,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1066,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1171,
											"end": 1176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1153,
											"end": 1177,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1153,
											"end": 1177,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1153,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1184,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1190,
											"end": 1412,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1190,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1402,
											"end": 1403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1384,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1334,
											"end": 1405,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1405,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1334,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1412,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1412,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1412,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1418,
											"end": 1514,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1418,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1514,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1520,
											"end": 1646,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1520,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1639,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1590,
											"end": 1595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1646,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1652,
											"end": 1774,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1652,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1743,
											"end": 1748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1725,
											"end": 1749,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1725,
											"end": 1749,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1725,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1750,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1774,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"handleTransaction(address,bytes)": "220ab6aa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cryptoVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"msgData\",\"type\":\"bytes\"}],\"name\":\"handleTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fort.sol\":\"AlertBot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fort.sol\":{\"keccak256\":\"0xe0e591805c6ea8c52afcd5a987f3abb6db5dd900403c76bac76fd49eee00deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607816b484ef891860ff14c342c67b559ca327260eae0ae5dbf5b30663d332f8\",\"dweb:/ipfs/QmYYEgSJ7gzkUAwQsB6x5KvdcYKE4UF3UCGzBEAr62CfPD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 31,
								"contract": "fort.sol:AlertBot",
								"label": "cryptoVault",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDetectionBot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "msgData",
									"type": "bytes"
								}
							],
							"name": "handleTransaction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"handleTransaction(address,bytes)": "220ab6aa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"msgData\",\"type\":\"bytes\"}],\"name\":\"handleTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fort.sol\":\"IDetectionBot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fort.sol\":{\"keccak256\":\"0xe0e591805c6ea8c52afcd5a987f3abb6db5dd900403c76bac76fd49eee00deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607816b484ef891860ff14c342c67b559ca327260eae0ae5dbf5b30663d332f8\",\"dweb:/ipfs/QmYYEgSJ7gzkUAwQsB6x5KvdcYKE4UF3UCGzBEAr62CfPD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IForta": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "msgData",
									"type": "bytes"
								}
							],
							"name": "notify",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "raiseAlert",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "detectionBotAddress",
									"type": "address"
								}
							],
							"name": "setDetectionBot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"notify(address,bytes)": "fa1fd28c",
							"raiseAlert(address)": "087a43c1",
							"setDetectionBot(address)": "9e927c68"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"msgData\",\"type\":\"bytes\"}],\"name\":\"notify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"raiseAlert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"detectionBotAddress\",\"type\":\"address\"}],\"name\":\"setDetectionBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fort.sol\":\"IForta\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fort.sol\":{\"keccak256\":\"0xe0e591805c6ea8c52afcd5a987f3abb6db5dd900403c76bac76fd49eee00deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607816b484ef891860ff14c342c67b559ca327260eae0ae5dbf5b30663d332f8\",\"dweb:/ipfs/QmYYEgSJ7gzkUAwQsB6x5KvdcYKE4UF3UCGzBEAr62CfPD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> fort.sol:17:5:\n   |\n17 |     constructor(address _cryptoVault) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 552,
					"file": "fort.sol",
					"start": 466
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> fort.sol:21:46:\n   |\n21 |     function handleTransaction(address user, bytes calldata msgData) external override {\n   |                                              ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 623,
					"file": "fort.sol",
					"start": 601
				},
				"type": "Warning"
			}
		],
		"sources": {
			"fort.sol": {
				"ast": {
					"absolutePath": "fort.sol",
					"exportedSymbols": {
						"AlertBot": [
							68
						],
						"IDetectionBot": [
							9
						],
						"IForta": [
							27
						]
					},
					"id": 69,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "IDetectionBot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "220ab6aa",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleTransaction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "118:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "msgData",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "132:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "132:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "117:38:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "164:0:0"
									},
									"scope": 9,
									"src": "91:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 69,
							"src": "60:108:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 27,
							"linearizedBaseContracts": [
								27
							],
							"name": "IForta",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9e927c68",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDetectionBot",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "detectionBotAddress",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "221:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:29:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "258:0:0"
									},
									"scope": 27,
									"src": "196:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fa1fd28c",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notify",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "281:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "msgData",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "295:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 17,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "295:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:38:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:0:0"
									},
									"scope": 27,
									"src": "265:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "087a43c1",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "raiseAlert",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:14:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "376:0:0"
									},
									"scope": 27,
									"src": "334:43:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 69,
							"src": "172:208:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 28,
										"name": "IDetectionBot",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 9,
										"src": "405:13:0"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "405:13:0"
								}
							],
							"contractDependencies": [
								9
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 68,
							"linearizedBaseContracts": [
								68,
								9
							],
							"name": "AlertBot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "cryptoVault",
									"nodeType": "VariableDeclaration",
									"scope": 68,
									"src": "426:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 30,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "426:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "507:45:0",
										"statements": [
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 36,
														"name": "cryptoVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "518:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 37,
														"name": "_cryptoVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "532:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "518:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "518:26:0"
											}
										]
									},
									"id": 41,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "_cryptoVault",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "478:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:22:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "507:0:0"
									},
									"scope": 68,
									"src": "466:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8
									],
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "643:220:0",
										"statements": [
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "origSender",
														"nodeType": "VariableDeclaration",
														"scope": 66,
														"src": "656:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 49,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "656:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"nodeType": "VariableDeclarationStatement",
												"src": "656:18:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "694:58:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "709:32:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:4:0",
																		"type": "",
																		"value": "0xa8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "723:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:18:0"
															},
															"variableNames": [
																{
																	"name": "origSender",
																	"nodeType": "YulIdentifier",
																	"src": "709:10:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 50,
														"isOffset": false,
														"isSlot": false,
														"src": "709:10:0",
														"valueSize": 1
													}
												],
												"id": 52,
												"nodeType": "InlineAssembly",
												"src": "685:67:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "origSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "767:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 54,
														"name": "cryptoVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "781:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "767:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"nodeType": "IfStatement",
												"src": "764:92:0",
												"trueBody": {
													"id": 64,
													"nodeType": "Block",
													"src": "794:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 61,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "839:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 57,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "816:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 58,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "816:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 56,
																			"name": "IForta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "809:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IForta_$27_$",
																				"typeString": "type(contract IForta)"
																			}
																		},
																		"id": 59,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "809:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IForta_$27",
																			"typeString": "contract IForta"
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "raiseAlert",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "809:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address) external"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "809:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 63,
															"nodeType": "ExpressionStatement",
															"src": "809:35:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "220ab6aa",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "handleTransaction",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "634:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "587:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "msgData",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "601:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 44,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "601:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:38:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:0:0"
									},
									"scope": 68,
									"src": "560:303:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 69,
							"src": "384:482:0"
						}
					],
					"src": "33:833:0"
				},
				"id": 0
			}
		}
	}
}