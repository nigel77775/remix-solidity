{
	"compiler": {
		"version": "0.6.0+commit.26b70077"
	},
	"language": "Solidity",
	"output": {
		"abi": [],
		"devdoc": {
			"details": "Deprecated. This contract is kept in the Upgrades Plugins for backwards compatibility purposes. Users should use openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol instead. * Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.",
			"methods": {},
			"title": "Initializable"
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"in.sol": "Initializable"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"in.sol": {
			"keccak256": "0x97aac901dd0fafc8b079d87efc17539407d72d1b16391fc69c42e637d28c3a76",
			"urls": [
				"bzz-raw://bf1029acf01ae2bbdcce5c2e4f64fd9c5c24049fa42ecd86ff6b45766b1c90d7",
				"dweb:/ipfs/QmYah9FEyyP1DV9qp1QYRbAKMrtmK3ErK3TjvU2GPmmzRG"
			]
		}
	},
	"version": 1
}